{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearSelection","setState","this","hasSelection","Boolean","className","type","onClick","map","good","isSelected","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,eAAiB,kBAAM,EAAKC,SAAS,CAAEF,aAAc,MALvD,4CAOE,WAAU,IAAD,OACCA,EAAiBG,KAAKJ,MAAtBC,aACFI,EAAeC,QAAyB,KAAjBL,GAE7B,OACE,uBAAMM,UAAU,oBAAhB,UACGF,EAEG,qBAAIE,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASL,KAAKF,oBAIlB,oBAAIK,UAAU,QAAd,+BAGJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAC,GACT,IAAMC,EAAaN,QAAQK,IAASV,GAEpC,OACE,qBACE,UAAQ,OAERM,UAAWM,IACT,CAAE,+BAAgCD,IAJtC,UAOE,6BACGA,EAEG,wBACE,UAAQ,eACRJ,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKP,eAJhB,eAUA,wBACE,UAAQ,YACRM,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKN,SAAS,CAAEF,aAAcU,KALlC,iBAaN,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAhCEA,iBAtCvB,GAAyBG,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c9b6c50e.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearSelection = () => this.setState({ selectedGood: '' });\n\n  render() {\n    const { selectedGood } = this.state;\n    const hasSelection = Boolean(selectedGood !== '');\n\n    return (\n      <main className=\"section container\">\n        {hasSelection\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelection}\n              />\n            </h1>\n          ) : (\n            <h1 className=\"title\">No goods selected</h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = Boolean(good === selectedGood);\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': isSelected },\n                  )}\n                >\n                  <td>\n                    {isSelected\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.clearSelection}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.setState({ selectedGood: good });\n                          }}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}